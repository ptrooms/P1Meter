[env]
platform                = ${common.platform}
platform_packages       = ${common.platform_packages}
framework               = ${common.framework}
board                   = ${common.board}
board_build.ldscript    = ${common.board_build.ldscript}
board_build.flash_mode  = ${common.board_build.flash_mode}
board_build.f_flash     = ${common.board_build.f_flash}
board_build.f_cpu       = ${common.board_build.f_cpu}
build_unflags           = ${common.build_unflags}
build_flags             = ${common.build_flags}
monitor_speed           = ${common.monitor_speed}
upload_port             = ${common.upload_port}
upload_resetmethod      = ${common.upload_resetmethod}
upload_speed            = ${common.upload_speed}
extra_scripts           = ${common.extra_scripts}
lib_extra_dirs          = ${common.lib_extra_dirs}
lib_ignore              =
    Servo(esp8266)
    ESP8266AVRISP
    ESP8266LLMNR
    ESP8266NetBIOS
    ESP8266SSDP
    SP8266WiFiMesh
    Ethernet(esp8266)
    GDBStub
    TFT_Touch_Shield_V2
    ESP8266HTTPUpdateServer
    ESP8266WiFiMesh
    EspSoftwareSerial
    SPISlave
    Hash
; Disable next if you want to use ArduinoOTA in Tasmota (default disabled)
;    ArduinoOTA

[env:p1meter-production]
# monitor_port            = /dev/ttyUSB0
#   read: [https://pyserial.readthedocs.io/en/latest/url_handlers.html]
monitor_port            = socket://192.168.1.154:20108
monitor_filters         = log2file, time, default
upload_port             = 192.168.1.35	
upload_protocol         = espota
build_flags             = ${common.build_flags}
                          -DNDEBUG 

[env:p1meter-test-OTA]
upload_port             = 192.168.1.185
monitor_port            = /dev/ttyUSB1
monitor_echo            = yes
# monitor_filters         = log2file, time, default, esp8266_exception_decoder
monitor_filters         = log2file, time, default
build_type              = debug
build_flags             = ${common.build_flags} -DTEST_MODE
                          -DNDEBUG 
#                          -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
#                           -DPIO_FRAMEWORK_ARDUINO_MMU_CACHE16_IRAM48
#                           -DVTABLES_IN_FLASH
#                           -DFP_IN_IROM
#                           -fexceptions
# std=c++11
# lib_archive                 = no
# lib_ldf_mode                = chain
# lib_compat_mode             = strict
upload_protocol         = espota
lib_extra_dirs          =

[env:p1meter-test-OTA-ssid8]
upload_port             = 10.42.1.125
monitor_port            = /dev/ttyUSB0
monitor_filters         = log2file, time, default
build_flags             = ${common.build_flags} -DTEST_MODE
                          -DNDEBUG 
upload_protocol         = espota
lib_extra_dirs          =



[env:p1meter-test-USB]

build_type 				= debug 
upload_port             = /dev/ttyUSB0
monitor_port            = /dev/ttyUSB0
monitor_filters         = log2file, time, default
build_flags             = ${common.build_flags} -DTEST_MODE
                          -DNDEBUG 
lib_extra_dirs          =

[env:p1meter-test-USB-exception]

build_type 				= debug 
upload_port             = /dev/ttyUSB0
monitor_port            = /dev/ttyUSB0
monitor_filters         = log2file, time, default, esp8266_exception_decoder
build_flags             = ${common.build_flags} 
                            -DTEST_MODE
;                            -DDEBUG 
                            -DPIO_FRAMEWORK_ARDUINO_ENABLE_EXCEPTIONS
;                            -fexceptions ; causes section `.text' will not fit in region `iram1_0_seg
lib_extra_dirs          =
